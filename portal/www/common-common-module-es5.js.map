{"version":3,"sources":["webpack:///src/app/common/user-profile-setting/user-profile-setting.page.ts","webpack:///src/app/common/message/message.page.html","webpack:///src/app/common/go-live/go-live.page.ts","webpack:///src/app/common/common-routing.module.ts","webpack:///src/app/common/message/message.page.scss","webpack:///src/app/common/user-profile-setting/user-profile-setting.page.scss","webpack:///src/app/common/common.module.ts","webpack:///src/app/common/user-profile-setting/user-profile-setting.page.html","webpack:///src/app/common/message/scroll-to-bottom.directive.ts","webpack:///src/app/common/message/message.page.ts","webpack:///src/app/common/go-live/go-live.page.scss","webpack:///src/app/common/go-live/go-live.page.html"],"names":["UserProfileSettingPage","router","formBuilder","profileservice","storage","apiloader","options","types","componentRestrictions","country","zoom","base_lat","base_lng","location_lat","location_lng","Location_list","location_type","old_default_id","submitted","emailPattern","address","Number","geometry","location","lat","lng","Latitude","Longitude","formatted_address","console","log","view","user","profile_id","subscribe","res","profile","initForm","profileForm","group","firstName","profile_first_name","required","lastName","profile_last_name","businessName","profile_biz_name","mobile","profile_contact","email","profile_email","pattern","profile_location","profile_address","summary","profile_summary","bank_acc_no","bank_name","bank_ifsc_no","bank_branch","controls","event","profileImage","target","files","invalid","f","_profile","value","profile_dob","Date","profile_facebook","profile_instagram","profile_twitter","update","navigateByUrl","err","uploadimage","alert","$event","coords","location_details","data","selector","template","GoLivePage","routes","path","component","children","CommonPageRoutingModule","imports","forChild","exports","CommonPageModule","forRoot","apiKey","declarations","ScrollToBottomDirective","_el","el","nativeElement","scrollTop","Math","max","scrollHeight","offsetHeight","MessagePage","route","uservice","service","chats","senderId","sender","user_name","innerHeight","window","userRole","listChaters","users","rows","openChat","count","list","params","receiver","profile_view","setInterval","receiverId","loadChats","listContents","_receiver","chatmsg","socket","emit","receiverChatID","senderChatID","content","sendMsg","on","msg","item","push"],"mappings":"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","file":"common-common-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProfileService } from 'src/app/_core/services/profile.service';\nimport { LocalStorage } from 'src/app/_core/_data/localstorage';\n\nimport {AgmMap, MouseEvent,MapsAPILoader  } from '@agm/core';\nimport { Location } from '@angular/common';\nimport { Inject, ViewChild, ElementRef } from '@angular/core';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\n\n\n\n\n@Component({\n  selector: 'app-user-profile-setting',\n  templateUrl: './user-profile-setting.page.html',\n  styleUrls: ['./user-profile-setting.page.scss'],\n})\nexport class UserProfileSettingPage implements OnInit, OnDestroy {\n\n  @ViewChild(AgmMap,{static: true}) public agmMap: AgmMap;\n  @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\n\n  public handleAddressChange(address: any) {\n    this.zoom = 15;\n    this.location_lat = Number(address.geometry.location.lat());\n    this.location_lng = Number(address.geometry.location.lng());\n    this.base_lat = this.location_lat;\n    this.base_lng = this.location_lng;\n    this.Latitude = this.location_lat;\n    this.Longitude = this.location_lng;\n    this.address = address.formatted_address;\n\n    console.log(this.Latitude,this.Longitude);\n    console.log(this.address);\n\n  }\n\n  options={\n    types: [],\n    componentRestrictions: { country: 'IN' }\n    }\n\n\n  zoom: number = 8;\n  base_lat: number = 11.1271;\n  base_lng: number = 78.6569;\n  location_lat: number = 11.1271;\n  location_lng: number = 78.6569;\n\n  Latitude : any;\n  Longitude : any;\n  address : any;\n  // Latitude : any;\n\n  Location_list :any = [];\n  location_type : any = \"Home\";\n  location_default : any;\n  old_default_id : any = \"\";\n\n\n\n  \n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private profileservice: ProfileService,\n    private storage: LocalStorage,\n    private apiloader:MapsAPILoader,\n  ) { }\n\n  profile: any;\n  profileForm: FormGroup;\n  submitted = false;\n  profileImage: File;\n\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n\n  ngOnInit() {\n    this.profileservice.view(this.storage.user.profile_id).subscribe(res => {\n      this.profile = res;\n      console.log(this.profile);\n      this.initForm();\n    })\n    this.initForm();\n  }\n\n  initForm() {\n    this.profileForm = this.formBuilder.group({\n      firstName: [this.profile ? this.profile.profile_first_name : '', [Validators.required]],\n      lastName: [this.profile ? this.profile.profile_last_name : '', [Validators.required]],\n      businessName: [this.profile ? this.profile.profile_biz_name : '', [Validators.required]],\n      mobile: [this.profile ? this.profile.profile_contact : '', [Validators.required]],\n      email: [this.profile ? this.profile.profile_email : '', [Validators.required, Validators.pattern(this.emailPattern)]],\n      location: [this.profile ? this.profile.profile_location : '', [Validators.required]],\n      // dob: [this.profile ? this.profile.profile_dob : '', [Validators.required]],\n      address: [this.profile ? this.profile.profile_address : '', [Validators.required]],\n      summary: [this.profile ? this.profile.profile_summary : '', [Validators.required]],\n      bank_acc_no: [this.profile ? this.profile.bank_acc_no : '', [Validators.required]],\n      bank_name: [this.profile ? this.profile.bank_name : '', [Validators.required]],\n\n      bank_ifsc_no: [this.profile ? this.profile.bank_ifsc_no : '', [Validators.required]],\n      bank_branch: [this.profile ? this.profile.bank_branch : '', [Validators.required]],\n\n\n\n      // facebook: [this.profile ? this.profile.profile_facebook : '', [Validators.required]],\n      // twitter: [this.profile ? this.profile.profile_twitter : '', [Validators.required]],\n      // instagram: [this.profile ? this.profile.profile_instagram : '', [Validators.required]],\n    });\n  }\n\n  get f() { return this.profileForm.controls; }\n\n  selectImg(event) {\n    this.profileImage = event.target.files[0];\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.profileForm.invalid) {\n      return;\n    }\n    const controls = this.f;\n    console.log('controls ', controls);\n    const _profile = {\n      profile_id: this.profile.profile_id,\n      profile_first_name: controls.firstName.value,\n      profile_last_name: controls.lastName.value,\n      profile_email: controls.email.value,\n      profile_biz_name : controls.businessName.value,\n      profile_contact: controls.mobile.value,\n      profile_address: controls.address.value,\n      profile_dob: new Date(),\n      profile_location: controls.location.value,\n      profile_summary: controls.summary.value,\n      profile_facebook: \"\",\n      profile_instagram: \"\",\n      profile_twitter: \"\",\n      bank_name : controls.bank_name.value,\n      bank_acc_no : controls.bank_acc_no.value,\n      bank_ifsc_no : controls.bank_ifsc_no.value,\n      bank_branch : controls.bank_branch.value,\n      location_lat : this.Latitude || 0,\n      location_lng : this.Longitude || 0\n    };\nconsole.log(_profile);\n\n    this.profileservice.update(_profile).subscribe(res => {\n      console.log(res);\n      \n      this.router.navigateByUrl('dashboard');\n      // this.notify.showSuccess(\"Logged in successfully\", \"LOGIN\");\n    }, err => {\n      // this.notify.showError(err, \"LOGIN\");\n    });\n  }\n\n  uploadImg() {\n    if (this.profileImage) {\n      this.profileservice.uploadimage(this.profile.profile_id, this.profileImage).subscribe(res => {\n        console.log(res);\n        \n        this.router.navigateByUrl('dashboard');\n        // this.notify.showSuccess(\"Logged in successfully\", \"LOGIN\");\n      }, err => {\n        // this.notify.showError(err, \"LOGIN\");\n      });\n    } else {\n      alert('Select Image');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.submitted = false;\n  }\n\n\n\n\n  markerDragEnd($event: MouseEvent) {\n    this.location_lat = Number($event.coords.lat);\n    this.location_lng = Number($event.coords.lng);\n    this.base_lat = this.location_lat;\n    this.base_lng = this.location_lng;\n    this.Latitude = this.location_lat;\n    this.Longitude = this.location_lng;\n    this.profileservice.location_details(this.location_lat,this.location_lng).subscribe(async data=>{\n      this.address = await data['results'][0]['formatted_address'];  \n    });\n  }\n\n\n      // profile_id: this.profile.profile_id,\n      // profile_first_name: controls.firstName.value,\n      // profile_last_name: controls.lastName.value,\n      // // profile_biz_name: controls.password.value,\n      // // profile_biz_type: controls.password.value,\n      // profile_email: controls.email.value,\n      // profile_contact: controls.mobile.value,\n      // profile_address: controls.address.value,\n      // profile_dob: controls.dob.value,\n      // // profile_gender: controls.password.value,\n      // profile_location: controls.location.value,\n      // profile_summary: controls.summary.value,\n      // profile_facebook: controls.facebook.value,\n      // // profile_youtube: controls.youtube.value,\n      // profile_instagram: controls.instagram.value,\n      // profile_twitter: controls.twitter.value\n\n\n}\n","export default \"<!--<ion-header>\\n  <ion-toolbar>\\n    <ion-title>message</ion-title>\\n  </ion-toolbar>\\n</ion-header>-->\\n\\n\\n<!-- Top Bar Starts -->\\n<div class=\\\"top-bar clearfix\\\">\\n  <div class=\\\"row gutter\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"page-title\\\">\\n        <h3>Message</h3>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n<!-- Top Bar Ends -->\\n<div class=\\\"row gutter \\\">\\n  <div class=\\\"col-md-4 mb-0 col-sm-4 col-xs-12 message_list\\\">\\n    <div class=\\\"task-wrapper mb-0\\\" [style.height.px]=\\\"innerHeight\\\">\\n\\n      <div class=\\\"task-block bug\\\" *ngFor=\\\"let user of users\\\" (click)=\\\"openChat(user)\\\">\\n        <h5 class=\\\"task-id\\\">{{user.profile_first_name}} {{user.profile_last_name}} <i class=\\\"icon-controller-record\\\"></i> </h5>\\n        <div class=\\\"assigned-user\\\">\\n          <img *ngIf=\\\"!user.profile_img\\\" src=\\\"assets/images/thumbs/user12.png\\\" class=\\\"img-fluid\\\" alt=\\\"Admin\\\">\\n          <img *ngIf=\\\"user.profile_img\\\" [src]=\\\"user.profile_img\\\" class=\\\"img-fluid\\\" alt=\\\"Admin\\\">\\n        </div>\\n        <p class=\\\"task-desc\\\">{{user.role_name}}</p>\\n        <ul class=\\\"task-footer\\\">\\n          <li>{{user.last_msg_time | timeAgo}}</li>\\n        </ul>\\n        <span class=\\\"task-type\\\">{{user.role_name}}</span>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-8\\\">\\n\\n    <div class=\\\"d-flex chat_col_2 flex-column\\\" [style.height.px]=\\\"innerHeight\\\">\\n      <div class=\\\"flx_1 pb-2 position-relative\\\">\\n        <div class=\\\"chat_info_load scroll_y\\\" #scrollMe [scrollTop]=\\\"scrollMe.scrollHeight\\\">\\n        <div *ngFor=\\\"let chat of chats\\\">\\n\\n          <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"chat.chat_receiver == senderId\\\">\\n            <div class=\\\"flx_0 chat_txt_w\\\">\\n              <div class=\\\"panel\\\">\\n                <h5 class=\\\"task-name text-red mb-0 pb-0 shadow_none\\\">{{receiver}}</h5>\\n                <p>\\n                  {{chat.chat_content}}\\n                </p>\\n                <div class=\\\"text-right time_chat\\\">\\n                  {{chat.chated_on | date: 'hh:mm a'}}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex justify-content-end mb-2\\\" *ngIf=\\\"chat.chat_sender == senderId\\\">\\n            <div class=\\\"flx_0 chat_txt_w\\\">\\n              <div class=\\\"panel\\\">\\n                <h5 class=\\\"task-name text-green mb-0 pb-0 shadow_none\\\">{{sender}}</h5>\\n                <p>\\n                  {{chat.chat_content}}\\n                </p>\\n                <div class=\\\"text-right time_chat\\\">\\n                  {{chat.chated_on | date: 'hh:mm a'}}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n        <!-- <div class=\\\"d-flex justify-content-end mb-2\\\">\\n\\n          <div class=\\\"flx_0 chat_txt_w\\\">\\n            <div class=\\\"panel\\\">\\n              <h5 class=\\\"task-name text-green mb-0 pb-0 shadow_none\\\">Sample Name - 147</h5>\\n              <p>\\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\\n                Ipsum has been the industry's standard dummy text ever\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex justify-content-start mb-2\\\">\\n          <div class=\\\"flx_0 chat_txt_w\\\">\\n            <div class=\\\"panel\\\">\\n              <h5 class=\\\"task-name text-red mb-0 pb-0 shadow_none\\\">Sample Name - 147</h5>\\n              <p>\\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\\n                Ipsum has been the industry's standard dummy text ever\\n              </p>\\n            </div>\\n          </div>\\n        </div> -->\\n      </div>\\n      <div class=\\\"flx_0\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n          <div class=\\\"flx_1 pr-2\\\">\\n            <textarea style=\\\"height: 70px;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"chatmsg\\\"></textarea>\\n          </div>\\n          <div class=\\\"flx_0\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"send()\\\">Send</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-go-live',\n  templateUrl: './go-live.page.html',\n  styleUrls: ['./go-live.page.scss'],\n})\nexport class GoLivePage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MasterlayoutPage } from '../layout/masterlayout/masterlayout.page';\n\nimport { CommonPage } from './common.component';\nimport { GoLivePage } from './go-live/go-live.page';\nimport { MessagePage } from './message/message.page';\nimport { UserProfileSettingPage } from './user-profile-setting/user-profile-setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CommonPage\n  },\n  {\n    path: '',\n    component: MasterlayoutPage,\n    children: [\n      {\n        path: 'message',\n        component: MessagePage\n      },\n      {\n        path: 'message/:receiver',\n        component: MessagePage\n      },\n      {\n        path: 'go-live',\n        component: GoLivePage\n      },\n      {\n        path: 'user-profile',\n        component: UserProfileSettingPage\n      }\n    ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CommonPageRoutingModule { }\n","export default \".task-wrapper,\\n.over_auto {\\n  overflow-y: auto;\\n  overflow-X: hidden;\\n}\\n\\n.chat_info_load {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  overflow: auto;\\n  top: 0;\\n}\\n\\n.time_chat {\\n  color: rgba(8, 6, 6, 0.5);\\n  font-size: 11px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL21lc3NhZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLGdCQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsY0FBQTtFQUNBLE1BQUE7QUFDSjs7QUFHQTtFQUNJLHlCQUFBO0VBQ0EsZUFBQTtBQUFKIiwiZmlsZSI6Im1lc3NhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2std3JhcHBlcixcbi5vdmVyX2F1dG8ge1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgb3ZlcmZsb3ctWDogaGlkZGVuO1xufVxuXG4uY2hhdF9pbmZvX2xvYWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b20gIDogMDtcbiAgICBsZWZ0ICAgIDogMDtcbiAgICByaWdodCAgIDogMDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICB0b3AgICAgIDogMDtcblxufVxuXG4udGltZV9jaGF0IHtcbiAgICBjb2xvciAgICA6IHJnYmEoOCwgNiwgNiwgMC41KTtcbiAgICBmb250LXNpemU6IDExcHg7XG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXByb2ZpbGUtc2V0dGluZy5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CommonPageRoutingModule } from './common-routing.module';\n\nimport { CommonPage } from './common.component';\nimport { UserProfileSettingPage } from './user-profile-setting/user-profile-setting.page';\nimport { MessagePage } from './message/message.page';\nimport { GoLivePage } from './go-live/go-live.page';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MasterlayoutPage } from '../layout/masterlayout/masterlayout.page';\nimport { MasterheaderPage } from '../layout/masterheader/masterheader.page';\nimport { MasterfooterPage } from '../layout/masterfooter/masterfooter.page';\nimport { MasterasidePage } from '../layout/masteraside/masteraside.page';\nimport {TimeAgoPipe} from 'time-ago-pipe';\n\n\nimport { AgmCoreModule } from '@agm/core';\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\nimport { LoaderComponent } from './loader/loader.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonPageRoutingModule,\n    AgmCoreModule.forRoot({apiKey: 'AIzaSyDap8qav1flUsql0VWUYkjgB0noN0o_U1Y'}),\n    GooglePlaceModule\n  ],\n  declarations: [\n    CommonPage,\n    MasterlayoutPage,\n    MasterheaderPage,\n    MasterfooterPage,\n    MasterasidePage,\n    UserProfileSettingPage,\n    MessagePage,\n    GoLivePage,\n    LoaderComponent,\n    TimeAgoPipe\n  ]\n})\nexport class CommonPageModule {}\n","export default \"<!-- Top Bar Starts -->\\n<div class=\\\"top-bar clearfix\\\">\\n    <div class=\\\"row gutter\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"page-title\\\">\\n                <h3>User Profile Setting</h3>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n<!-- Top Bar Ends -->\\n\\n<div class=\\\"announc_form\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">First Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\"\\n                                        placeholder=\\\"First Name\\\" />\\n                                    <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Last Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n                                        placeholder=\\\"Last Name\\\" />\\n                                    <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Business Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"businessName\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.businessName.errors }\\\"\\n                                        placeholder=\\\"Business Name\\\" />\\n                                    <div *ngIf=\\\"submitted && f.businessName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.businessName.errors.required\\\">Business Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Mobile No</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"mobile\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.mobile.errors }\\\"\\n                                        placeholder=\\\"Mobile No\\\" />\\n                                    <div *ngIf=\\\"submitted && f.mobile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.mobile.errors.required\\\">Mobile No is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Email</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" placeholder=\\\"Email\\\" />\\n                                    <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n \\n\\n\\n\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Address</label>\\n                                    <textarea formControlName=\\\"address\\\" style=\\\"height: 100px;\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\"\\n                                        placeholder=\\\"Address\\\"></textarea>\\n                                    <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.address.errors.required\\\">Address is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Location</label>\\n                                    <textarea formControlName=\\\"location\\\" style=\\\"height: 70px;\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.location.errors }\\\"\\n                                        placeholder=\\\"Location\\\"></textarea>\\n                                    <div *ngIf=\\\"submitted && f.location.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.location.errors.required\\\">Location is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">D.O.B</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"dob\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.dob.errors }\\\"\\n                                        placeholder=\\\"Date of birth\\\" />\\n                                    <div *ngIf=\\\"submitted && f.dob.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.dob.errors.required\\\">D.O.B is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Address</label>\\n                                    <!-- <agm-map [latitude]=\\\"base_lat\\\" [longitude]=\\\"base_lng\\\" [zoom]=\\\"zoom\\\" [disableDefaultUI]=\\\"false\\\"\\n                                    [zoomControl]=\\\"false\\\">\\n                                    <agm-marker [latitude]=\\\"location_lat\\\" [longitude]=\\\"location_lng\\\" [markerDraggable]=\\\"true\\\"\\n                                      (dragEnd)=\\\"markerDragEnd($event)\\\">\\n                                      <agm-info-window>\\n                                        <strong>{{ address }}</strong>\\n                                      </agm-info-window>\\n                                    </agm-marker>\\n                                   </agm-map> -->\\n                                   <input formControlName=\\\"address\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\"\\n                                   placeholder=\\\"Address\\\"  style=\\\"width: 100%;\\\" [(ngModel)]=\\\"address\\\" ngx-google-places-autocomplete  #placesRef=\\\"ngx-places\\\"\\n                                   (onAddressChange)=\\\"handleAddressChange($event)\\\" />\\n                                    <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.address.errors.required\\\">Address is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Location</label>\\n                                    <input formControlName=\\\"location\\\"  [disabled]=\\\"false\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.location.errors }\\\"\\n                                        placeholder=\\\"Location\\\">\\n                                    <div *ngIf=\\\"submitted && f.location.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.location.errors.required\\\">Location is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Summary</label>\\n                                    <textarea type=\\\"text\\\" formControlName=\\\"summary\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.summary.errors }\\\"\\n                                        placeholder=\\\"Summary\\\"> </textarea>\\n                                    <div *ngIf=\\\"submitted && f.summary.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.summary.errors.required\\\">Summary is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Bank Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_name\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_name.errors }\\\"\\n                                        placeholder=\\\"Bank Name\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_name.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_name.errors.required\\\">Bank Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Bank Account No</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_acc_no\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_acc_no.errors }\\\"\\n                                        placeholder=\\\"Bank Account No\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_acc_no.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_acc_no.errors.required\\\">Bank Account No is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Branch</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_branch\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_branch.errors }\\\"\\n                                        placeholder=\\\"Branch\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_branch.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_branch.errors.required\\\">Bank Branch is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">IFSC</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_ifsc_no\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_ifsc_no.errors }\\\"\\n                                        placeholder=\\\"IFSC\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_ifsc_no.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_ifsc_no.errors.required\\\">IFSC is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Facebook</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"facebook\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.facebook.errors }\\\"\\n                                        placeholder=\\\"Facebook\\\" />\\n                                    <div *ngIf=\\\"submitted && f.facebook.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.facebook.errors.required\\\">Facebook is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Twitter</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"twitter\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.twitter.errors }\\\"\\n                                        placeholder=\\\"Twitter\\\" />\\n                                    <div *ngIf=\\\"submitted && f.twitter.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.twitter.errors.required\\\">Twitter is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Instagram</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"instagram\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.instagram.errors }\\\"\\n                                        placeholder=\\\"Instagram\\\" />\\n                                    <div *ngIf=\\\"submitted && f.instagram.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.instagram.errors.required\\\">Instagram is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Upload Profile Image</label>\\n                                    <input type=\\\"file\\\" class=\\\"form-control\\\" accept=\\\"image/*\\\" (change)=\\\"selectImg($event)\\\"/>\\n                                </div>\\n                                <div class=\\\"flx_0\\\">\\n                                    <button title=\\\"Choose Default Image\\\" class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"uploadImg()\\\"> <i class=\\\"icon-plus d-block\\\"></i> </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"text-center pb-2\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success mr-2\\\">Save</button>\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Clear</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[scroll-to-bottom]'\n})\nexport class ScrollToBottomDirective {\n  constructor(private _el: ElementRef) { }\n\n  // public ngAfterViewInit() {\n  //   const el: HTMLDivElement = this._el.nativeElement;\n  //   // Does not work as scrollHeight === offsetHeight\n  //   el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight);\n  //   // This work but we see scroll moving\n  //   setTimeout(() => el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight));\n  // }\n\n  // public ngOnInit() {\n  //   const el: HTMLDivElement = this._el.nativeElement;\n  //   // Does not work as scrollHeight === offsetHeight\n  //   el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight);\n  //   // This work but we see scroll moving\n  //   setTimeout(() => el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight));\n  // }\n\n  public scrollToBottom() {\n    const el: HTMLDivElement = this._el.nativeElement;\n    el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight);\n  }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { io } from 'socket.io-client';\nimport { RemoteConfig } from 'src/app/_core/configs/remote.config';\nimport { ChatService } from 'src/app/_core/services/chat.service';\nimport { ProfileService } from 'src/app/_core/services/profile.service';\nimport { UserService } from 'src/app/_core/services/user.service';\nimport { LocalStorage } from 'src/app/_core/_data/localstorage';\nimport { ScrollToBottomDirective } from './scroll-to-bottom.directive';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n\n  public innerHeight: any;\n  @ViewChild(ScrollToBottomDirective) scroll: ScrollToBottomDirective;\n\n  socket: any;\n  chats = [];\n  senderId: string;\n  receiverId: string;\n  sender: string;\n  receiver: string;\n\n  chatmsg: string;\n  users: any[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private storage: LocalStorage,\n    private uservice: UserService,\n    private service: ChatService,\n    private profileservice: ProfileService\n  ) {\n    this.senderId = this.storage.user.profile_id;\n    this.sender = this.storage.user.user_name;\n\n    // this.socket = io(RemoteConfig.BASE_URL, {\n    //   transports: [\"websocket\"],\n    //   reconnection: true,\n    //   reconnectionDelayMax: 1000,\n    //   autoConnect: true,\n    //   query: {\n    //     chatID: this.senderId\n    //   }\n    // });\n\n    // this.socket.on(\"connect\", () => {\n    //   console.log('Socket id - ', this.socket.id); // x8WIv7-mJelg7on_ALbx\n    // });\n\n    // this.socket.on('error', function () {\n    //   console.log(\"Sorry, there seems to be an issue with the connection!\");\n    // });\n\n    // this.socket.on('connect_error', function (err) {\n    //   console.log(\"connect failed \" + err);\n    // });\n\n    // this.socket.on('connection', function () {\n    //   console.log(\"connected\");\n    // });\n    \n  }\n\n  ngOnInit() {\n    this.innerHeight = window.innerHeight - 150;\n\n    if (this.storage.userRole == 1) {\n      // this.uservice.listMerchants({}).subscribe(res => {\n      //   this.users = res.rows;\n      // })\n\n      this.service.listChaters(this.senderId, {}).subscribe(res => {\n        this.users = res.rows;\n        if (this.users) {\n          this.openChat(this.users[0])\n        }\n      })\n    } else {\n      this.service.listChaters(this.senderId, {}).subscribe(res => {\n        if (res.count > 0) {\n          this.users = res.rows;\n          if (this.users) {\n            this.openChat(this.users[0])\n          }\n        } else {\n          this.uservice.list({}).subscribe(res => {\n            console.log('Users ', res);\n            this.users = res.rows;\n            if (this.users) {\n              this.openChat(this.users[0])\n            }\n          })\n        }\n      })\n    }\n\n    this.route.params.subscribe(params => {\n      console.log('Params ', params.receiver);\n      if (params.receiver) {\n        this.profileservice.profile_view(1).subscribe(res => {\n          this.openChat(res);\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n\n    // this.socket.on('receive_message', (msg) => {\n    //   console.log('Receive msgs - ', msg);\n    //   this.chats.push(msg);\n    // });\n\n    setInterval(() => {\n      if (this.senderId && this.receiverId) {\n        this.loadChats();\n      }\n    }, 1000);\n  }\n\n  loadChats() {\n    this.service.listContents(this.senderId, this.receiverId).subscribe(res => {\n      this.chats = res.rows;\n      console.log('Chats - ', this.chats);\n    })\n  }\n\n  openChat(_receiver) {\n    this.receiverId = _receiver.profile_id;\n    this.receiver = _receiver.profile_first_name + ' ' + _receiver.profile_last_name;\n    this.loadChats();\n  }\n\n  send_1() {\n    if (this.chatmsg != '') {\n      // Push the message through socket \n      console.log('Socket - ', this.socket);\n\n      this.socket.emit('send_message', {\n        receiverChatID: this.receiverId,\n        senderChatID: this.senderId,\n        content: this.chatmsg\n      });\n    }\n    this.chatmsg = '';\n    // this.receive();\n  }\n\n  send() {\n    if (this.chatmsg != '') {\n      this.service.sendMsg({\n        receiverChatID: this.receiverId,\n        senderChatID: this.senderId,\n        content: this.chatmsg\n      }).subscribe(res => {\n        console.log(res);\n      })\n    }\n    this.chatmsg = '';\n  }\n\n  receive1() {\n    console.log('receive called', this.socket);\n\n    // Socket receiving method \n    this.socket.on('receive_message', (msg) => {\n      console.log('Receive msgs - ', msg);\n\n      var item = {};\n\n      // check the sender id and change the style class\n      // if(saletdMsgArr[0] == this.myUserId){\n      //    item = { \"styleClass\":\"chat-message right\", \"msgStr\":saletdMsgArr[1] };\n      // }\n      // else{\n      //    item= { \"styleClass\":\"chat-message left\", \"msgStr\":saletdMsgArr[1] };\n      // }\n      // push the bind object to array\n      // Final chats array will iterate in the view  \n\n      this.chats.push(item);\n    });\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnby1saXZlLnBhZ2Uuc2NzcyJ9 */\";","export default \"<!--<ion-header>\\n  <ion-toolbar>\\n    <ion-title>go-live</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n\\n  <!-- Top Bar Starts -->\\n  <div class=\\\"top-bar clearfix\\\">\\n      <div class=\\\"row gutter\\\">\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"page-title\\\">\\n                  <h3>Go Live</h3>\\n              </div>\\n          </div>\\n\\n      </div>\\n  </div>\\n  <!-- Top Bar Ends -->\\n\\n  <div class=\\\"d-flex align-items-center justify-content-center flex-row\\\">\\n      <div class=\\\"text-center pr-3 pl-3\\\">\\n          <a href=\\\"#\\\">\\n              <span class=\\\"cart_icon d-inline-flex align-items-center justify-content-center\\\">\\n                  <i class=\\\"icon-shopping-cart\\\"></i>\\n              </span>\\n              <h5>Go Live</h5>\\n          </a>\\n      </div>\\n\\n  </div>\\n\\n  <div class=\\\"pt-2\\\">\\n      <div class=\\\"panel\\\">\\n          <div class=\\\"panel-body\\\">\\n              <div class=\\\"form-group\\\">\\n                  <textarea style=\\\"height: 200px;\\\" class=\\\"form-control\\\"></textarea>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"checkbox\\\"> Agree Terms &amp; Conditions\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Proceed Live</button>\\n              </div>\\n          </div>\\n      </div>\\n\\n  </div>\\n\\n  <div class=\\\"pt-5\\\">\\n      <div class=\\\"panel panel-red\\\">\\n          <div class=\\\"panel-heading mb-0 pb-0\\\">\\n              <h3 class=\\\"text-left text-blue\\\">History</h3>\\n          </div>\\n          <div class=\\\"panel-body pb-0 table-responsive product_table td_center\\\">\\n              <div class=\\\"pb-2\\\">\\n                  <div class=\\\"styled-input-wrapper\\\">\\n                      <div class=\\\"input-icon\\\">\\n                          <i class=\\\"icon-trash-stroke text-red\\\"></i>\\n                      </div>\\n                      <div class=\\\"styled-input\\\">\\n                          <div class=\\\"history_live\\\">\\n                              <img src=\\\"../../../assets/images/timeline.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n\\n\\n\\n          </div>\\n      </div>\\n  </div>\";"]}