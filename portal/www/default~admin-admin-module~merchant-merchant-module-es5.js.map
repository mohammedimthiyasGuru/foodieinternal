{"version":3,"sources":["webpack:///src/app/admin/merchant-detail/merchant-detail.component.ts","webpack:///src/app/admin/merchant-detail/merchant-detail.component.html","webpack:///src/app/_core/services/merchant.service.ts","webpack:///src/app/admin/merchant-detail/merchant-detail.component.scss"],"names":["MerchantDetailComponent","router","formBuilder","MerchantService","storage","profileservice","apiloader","options","types","componentRestrictions","country","zoom","base_lat","base_lng","location_lat","location_lng","Location_list","location_type","old_default_id","keyword","data","id","name","submitted","emailPattern","address","Number","geometry","location","lat","lng","Latitude","Longitude","formatted_address","console","log","$event","coords","location_details","subscribe","initForm","profileForm","group","firstName","required","lastName","businessName","mobile","email","summary","controls","event","profileImage","target","files","invalid","f","_profile","role","first_name","value","last_name","password","contactno","merchant_register","res","profile","update_profile","err","uploadimage","profile_id","alert","navigateByUrl","profile_first_name","profile_last_name","profile_email","profile_biz_name","profile_contact","profile_address","profile_dob","Date","profile_location","profile_summary","profile_facebook","profile_instagram","profile_twitter","update","uploadImg","item","val","e","selector","template","Merchant_URL","BASE_URL","Register_URL","PROFILE_URL","http","httpUtils","_vendor_detail","post","headers","getHTTPHeaders","pipe","errorHandler","get","_filter","_params","fromObject","params","_vendorId","put","cat_id","_profileId","_profileImg","formData","FormData","append","httpHeaders","providedIn"],"mappings":"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","file":"default~admin-admin-module~merchant-merchant-module-es5.js","sourcesContent":["// import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/_core/services/profile.service';\nimport { MerchantService } from 'src/app/_core/services/merchant.service';\nimport { LocalStorage } from 'src/app/_core/_data/localstorage';\n\nimport {AgmMap, MouseEvent,MapsAPILoader  } from '@agm/core';\nimport { Location } from '@angular/common';\nimport { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\n\n@Component({\n  selector: 'app-merchant-detail',\n  templateUrl: './merchant-detail.component.html',\n  styleUrls: ['./merchant-detail.component.scss'],\n})\nexport class MerchantDetailComponent implements OnInit {\n\n  @ViewChild(AgmMap,{static: true}) public agmMap: AgmMap;\n  @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\n\n  public handleAddressChange(address: any) {\n    this.zoom = 15;\n    this.location_lat = Number(address.geometry.location.lat());\n    this.location_lng = Number(address.geometry.location.lng());\n    this.base_lat = this.location_lat;\n    this.base_lng = this.location_lng;\n    this.Latitude = this.location_lat;\n    this.Longitude = this.location_lng;\n    this.address = address.formatted_address;\n\n    console.log(this.Latitude,this.Longitude);\n    console.log(this.address);\n\n  }\n\n  options={\n    types: [],\n    componentRestrictions: { country: 'IN' }\n    }\n\n\n  zoom: number = 8;\n  base_lat: number = 11.1271;\n  base_lng: number = 78.6569;\n  location_lat: number = 11.1271;\n  location_lng: number = 78.6569;\n\n  Latitude : any;\n  Longitude : any;\n  address : any;\n  // Latitude : any;\n\n  Location_list :any = [];\n  location_type : any = \"Home\";\n  location_default : any;\n  old_default_id : any = \"\";\n\n  keyword = 'name';\n  data = [\n     {\n       id: 1,\n       name: 'Usa'\n     },\n     {\n       id: 2,\n       name: 'England'\n     }\n  ];\n\n\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private MerchantService: MerchantService,\n    private storage: LocalStorage,\n    private profileservice: ProfileService,\n    private apiloader:MapsAPILoader,\n  ) { }\n\n  profile: any;\n  profileForm: FormGroup;\n  submitted = false;\n  profileImage: File;\n\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n\n\n  markerDragEnd($event: MouseEvent) {\n    this.location_lat = Number($event.coords.lat);\n    this.location_lng = Number($event.coords.lng);\n    this.base_lat = this.location_lat;\n    this.base_lng = this.location_lng;\n    this.Latitude = this.location_lat;\n    this.Longitude = this.location_lng;\n    this.MerchantService.location_details(this.location_lat,this.location_lng).subscribe(async data=>{\n      this.address = await data['results'][0]['formatted_address'];  \n    });\n  }\n\n\n\n  ngOnInit() {\n    // this.profileservice.view(this.storage.user.profile_id).subscribe(res => {\n    //   this.profile = res;\n    //   console.log(this.profile);\n    //   this.initForm();\n    // })\n    this.initForm();\n  }\n\n  initForm() {\n    this.profileForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      businessName:['', [Validators.required]],\n      mobile: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      location: ['', [Validators.required]],\n      // dob: ['', [Validators.required]],\n      address:['', [Validators.required]],\n      summary: ['', [Validators.required]],\n      // facebook: ['', [Validators.required]],\n      // twitter: ['', [Validators.required]],\n      // instagram: ['', [Validators.required]],\n    });\n  }\n\n  get f() { return this.profileForm.controls; }\n\n  selectImg(event) {\n    this.profileImage = event.target.files[0];\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.profileForm.invalid) {\n      return;\n    }\n    const controls = this.f;\n    console.log('controls ', controls);\n    const _profile = {\n      role : 2 ,\n      first_name: controls.firstName.value,\n      last_name: controls.lastName.value,\n      password : \"123456\",\n      email: controls.email.value,\n      contactno: controls.mobile.value,\n    };\nconsole.log(_profile);\n    this.MerchantService.merchant_register(_profile).subscribe(res => {\n    console.log(res);\n    this.profile = res;\n    this.update_profile();\n   \n      // this.notify.showSuccess(\"Logged in successfully\", \"LOGIN\");\n    }, err => {\n      // this.notify.showError(err, \"LOGIN\");\n    });\n  }\n\n  uploadImg() {\n    if (this.profileImage) {\n      this.MerchantService.uploadimage(this.profile.profile_id, this.profileImage).subscribe(res => {\n        console.log(res);\n        alert(\"Added Successfully\");\n       this.router.navigateByUrl('/admin/users');\n      // this.notify.showSuccess(\"Logged in successfully\", \"LOGIN\");\n      }, err => {\n        // this.notify.showError(err, \"LOGIN\");\n      });\n    } else {\n      alert('Select Image');\n    }\n  }\n  \n\n  update_profile(){\n    const controls = this.f;\n    let _profile ={\n      profile_id: this.profile.profile_id,\n      profile_first_name: controls.firstName.value,\n      profile_last_name: controls.lastName.value,\n      profile_email: controls.email.value,\n      profile_biz_name : controls.businessName.value,\n      profile_contact: controls.mobile.value,\n      profile_address: controls.address.value,\n      profile_dob: new Date(),\n      profile_location: controls.location.value,\n      profile_summary: controls.summary.value,\n      profile_facebook: \"\",\n      profile_instagram: \"\",\n      profile_twitter: \"\",\n      location_lat : this.Latitude || 0,\n      location_lng : this.Longitude || 0\n    }\n    this.profileservice.update(_profile).subscribe(res => {\n      console.log(res);\n      this.uploadImg();\n    }, err => {\n      // this.notify.showError(err, \"LOGIN\");\n    });\n  }\n\n\n\n\n  ngOnDestroy(): void {\n    this.submitted = false;\n  }\n\n  selectEvent(item) {\n    // do something with selected item\n  }\n\n  onChangeSearch(val: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n  \n  onFocused(e){\n    // do something when input is focused\n  }\n  \n}\n","export default \"<!-- Top Bar Starts -->\\n<div class=\\\"top-bar clearfix\\\">\\n  <div class=\\\"row gutter\\\">\\n      <div class=\\\"col-12\\\">\\n          <div class=\\\"page-title\\\">\\n              <h3>Create New Merchant Form</h3>\\n          </div>\\n      </div>\\n\\n  </div>\\n</div>\\n<!-- Top Bar Ends -->\\n\\n<div class=\\\"announc_form\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">First Name</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\"\\n                                      placeholder=\\\"First Name\\\" />\\n                                  <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">Last Name</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n                                      placeholder=\\\"Last Name\\\" />\\n                                  <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">Business Name</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"businessName\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.businessName.errors }\\\"\\n                                      placeholder=\\\"Business Name\\\" />\\n                                  <div *ngIf=\\\"submitted && f.businessName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.businessName.errors.required\\\">Business Name is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">Mobile No</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"mobile\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.mobile.errors }\\\"\\n                                      placeholder=\\\"Mobile No\\\" />\\n                                  <div *ngIf=\\\"submitted && f.mobile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.mobile.errors.required\\\">Mobile No is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">Email</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" placeholder=\\\"Email\\\" />\\n                                  <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">Address</label>\\n\\n\\n                                  <agm-map [latitude]=\\\"base_lat\\\" [longitude]=\\\"base_lng\\\" [zoom]=\\\"zoom\\\" [disableDefaultUI]=\\\"false\\\"\\n                                  [zoomControl]=\\\"false\\\">\\n                                  <agm-marker [latitude]=\\\"location_lat\\\" [longitude]=\\\"location_lng\\\" [markerDraggable]=\\\"true\\\"\\n                                    (dragEnd)=\\\"markerDragEnd($event)\\\">\\n                                    <agm-info-window>\\n                                      <strong>{{ address }}</strong>\\n                                    </agm-info-window>\\n                                  </agm-marker>\\n                                 </agm-map>\\n\\n                                 <input formControlName=\\\"address\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"\\n                                 [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\"\\n                                 placeholder=\\\"Address\\\"  style=\\\"width: 100%;\\\" [(ngModel)]=\\\"address\\\" ngx-google-places-autocomplete  #placesRef=\\\"ngx-places\\\"\\n                                 (onAddressChange)=\\\"handleAddressChange($event)\\\" />\\n                                  <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.address.errors.required\\\">Address is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">Location</label>\\n                                  <input formControlName=\\\"location\\\"  [disabled]=\\\"false\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.location.errors }\\\"\\n                                      placeholder=\\\"Location\\\">\\n                                  <div *ngIf=\\\"submitted && f.location.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.location.errors.required\\\">Location is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n        \\n\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"summary\\\">Summary</label>\\n                                  <textarea type=\\\"text\\\" formControlName=\\\"summary\\\" style=\\\"height: 70px;\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.summary.errors }\\\"\\n                                      placeholder=\\\"Summary\\\"></textarea>\\n                                  <div *ngIf=\\\"submitted && f.summary.errors\\\" class=\\\"invalid-feedback\\\">\\n                                      <div *ngIf=\\\"f.summary.errors.required\\\">Summary is required</div>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"panel mb-3\\\">\\n                  <div class=\\\"panel-body\\\">\\n                      <div class=\\\"styled-input-wrapper\\\">\\n                          <div class=\\\"input-icon\\\">\\n                              <i class=\\\"icon-file-text2\\\"></i>\\n                          </div>\\n                          <div class=\\\"styled-input\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label for=\\\"userName\\\">Upload Profile Image</label>\\n                                  <input type=\\\"file\\\" class=\\\"form-control\\\" accept=\\\"image/*\\\" (change)=\\\"selectImg($event)\\\"/>\\n                              </div>\\n                              <div class=\\\"flx_0\\\">\\n                                  <button title=\\\"Choose Default Image\\\" class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"uploadImg()\\\"> <i class=\\\"icon-plus d-block\\\"></i> </button>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"text-center pb-2\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success mr-2\\\">Save</button>\\n                  <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Clear</button>\\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { HttpUtilService } from '../utils/http-util.service';\nimport { RemoteConfig } from '../configs/remote.config';\nimport { Result } from '../models/result.model';\nimport { catchError } from 'rxjs/operators';\n\nconst Merchant_URL = RemoteConfig.BASE_URL + '/merchant';\nconst Register_URL = RemoteConfig.BASE_URL + '/auth/signup';\nconst PROFILE_URL = RemoteConfig.BASE_URL + '/profile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MerchantService {\n\n  constructor(\n    private http: HttpClient,\n    private httpUtils: HttpUtilService) { }\n\n\n  merchant_register(_vendor_detail: any): Observable<any> {\n        return this.http.post<any>(Register_URL, _vendor_detail, { headers: this.httpUtils.getHTTPHeaders() }).pipe(catchError(this.httpUtils.errorHandler));\n  }\n\n\n  location_details(lat, lng) {\n    return this.http.get('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat + ',' + lng + '&key=AIzaSyDap8qav1flUsql0VWUYkjgB0noN0o_U1Y');\n  }\n\n\n  list(_filter): Observable<Result> {\n    var _params = new HttpParams({ fromObject: _filter })\n    return this.http.get<Result>(Merchant_URL, { headers: this.httpUtils.getHTTPHeaders(), params: _params }).pipe(catchError(this.httpUtils.errorHandler));\n  }\n\n  view(_vendorId: number): Observable<any> {\n    return this.http.get<any>(Merchant_URL + `/${_vendorId}`, { headers: this.httpUtils.getHTTPHeaders() }).pipe(catchError(this.httpUtils.errorHandler));\n  }\n\n  create(_vendor_detail: any): Observable<any> {\n    return this.http.post<any>(Merchant_URL, _vendor_detail, { headers: this.httpUtils.getHTTPHeaders() }).pipe(catchError(this.httpUtils.errorHandler));\n  }\n\n  update(_vendor_detail: any): Observable<any> {\n    return this.http.put<any>(Merchant_URL + `/${_vendor_detail.cat_id}`, _vendor_detail, { headers: this.httpUtils.getHTTPHeaders() }).pipe(catchError(this.httpUtils.errorHandler));\n  }\n\n\n  update_status(_vendor_detail: any): Observable<any> {\n    return this.http.put<any>(Merchant_URL + `/${_vendor_detail.cat_id}/status`, _vendor_detail, { headers: this.httpUtils.getHTTPHeaders() }).pipe(catchError(this.httpUtils.errorHandler));\n  }\n\n  delete(_vendorId: number): Observable<any> {\n    return this.http.delete<any>(Merchant_URL + `/${_vendorId}`, { headers: this.httpUtils.getHTTPHeaders() }).pipe(catchError(this.httpUtils.errorHandler));\n  }\n\n  uploadimage(_profileId: number, _profileImg: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('profileimg', _profileImg);\n    return this.http.put<any>(PROFILE_URL + `/${_profileId}/picture`, formData, { headers: this.httpUtils.httpHeaders() }).pipe(catchError(this.httpUtils.errorHandler));\n}\n\n}\n","export default \"agm-map {\\n  height: 130px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL21lcmNoYW50LWRldGFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSiIsImZpbGUiOiJtZXJjaGFudC1kZXRhaWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwe1xuICAgIGhlaWdodDogMTMwcHhcbiAgfSJdfQ== */\";"]}