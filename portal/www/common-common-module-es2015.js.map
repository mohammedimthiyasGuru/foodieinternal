{"version":3,"sources":["./src/app/common/user-profile-setting/user-profile-setting.page.ts","./src/app/common/message/message.page.html","./src/app/common/go-live/go-live.page.ts","./src/app/common/common-routing.module.ts","./src/app/common/message/message.page.scss","./src/app/common/user-profile-setting/user-profile-setting.page.scss","./src/app/common/common.module.ts","./src/app/common/user-profile-setting/user-profile-setting.page.html","./src/app/common/message/scroll-to-bottom.directive.ts","./src/app/common/message/message.page.ts","./src/app/common/go-live/go-live.page.scss","./src/app/common/go-live/go-live.page.html"],"names":[],"mappings":"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","file":"common-common-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProfileService } from 'src/app/_core/services/profile.service';\nimport { LocalStorage } from 'src/app/_core/_data/localstorage';\n\nimport {AgmMap, MouseEvent,MapsAPILoader  } from '@agm/core';\nimport { Location } from '@angular/common';\nimport { Inject, ViewChild, ElementRef } from '@angular/core';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\n\n\n\n\n@Component({\n  selector: 'app-user-profile-setting',\n  templateUrl: './user-profile-setting.page.html',\n  styleUrls: ['./user-profile-setting.page.scss'],\n})\nexport class UserProfileSettingPage implements OnInit, OnDestroy {\n\n  @ViewChild(AgmMap,{static: true}) public agmMap: AgmMap;\n  @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\n\n  public handleAddressChange(address: any) {\n    this.zoom = 15;\n    this.location_lat = Number(address.geometry.location.lat());\n    this.location_lng = Number(address.geometry.location.lng());\n    this.base_lat = this.location_lat;\n    this.base_lng = this.location_lng;\n    this.Latitude = this.location_lat;\n    this.Longitude = this.location_lng;\n    this.address = address.formatted_address;\n\n    console.log(this.Latitude,this.Longitude);\n    console.log(this.address);\n\n  }\n\n  options={\n    types: [],\n    componentRestrictions: { country: 'IN' }\n    }\n\n\n  zoom: number = 8;\n  base_lat: number = 11.1271;\n  base_lng: number = 78.6569;\n  location_lat: number = 11.1271;\n  location_lng: number = 78.6569;\n\n  Latitude : any;\n  Longitude : any;\n  address : any;\n  // Latitude : any;\n\n  Location_list :any = [];\n  location_type : any = \"Home\";\n  location_default : any;\n  old_default_id : any = \"\";\n\n\n\n  \n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private profileservice: ProfileService,\n    private storage: LocalStorage,\n    private apiloader:MapsAPILoader,\n  ) { }\n\n  profile: any;\n  profileForm: FormGroup;\n  submitted = false;\n  profileImage: File;\n\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n\n  ngOnInit() {\n    this.profileservice.view(this.storage.user.profile_id).subscribe(res => {\n      this.profile = res;\n      console.log(this.profile);\n      this.initForm();\n    })\n    this.initForm();\n  }\n\n  initForm() {\n    this.profileForm = this.formBuilder.group({\n      firstName: [this.profile ? this.profile.profile_first_name : '', [Validators.required]],\n      lastName: [this.profile ? this.profile.profile_last_name : '', [Validators.required]],\n      businessName: [this.profile ? this.profile.profile_biz_name : '', [Validators.required]],\n      mobile: [this.profile ? this.profile.profile_contact : '', [Validators.required]],\n      email: [this.profile ? this.profile.profile_email : '', [Validators.required, Validators.pattern(this.emailPattern)]],\n      location: [this.profile ? this.profile.profile_location : '', [Validators.required]],\n      // dob: [this.profile ? this.profile.profile_dob : '', [Validators.required]],\n      address: [this.profile ? this.profile.profile_address : '', [Validators.required]],\n      summary: [this.profile ? this.profile.profile_summary : '', [Validators.required]],\n      bank_acc_no: [this.profile ? this.profile.bank_acc_no : '', [Validators.required]],\n      bank_name: [this.profile ? this.profile.bank_name : '', [Validators.required]],\n\n      bank_ifsc_no: [this.profile ? this.profile.bank_ifsc_no : '', [Validators.required]],\n      bank_branch: [this.profile ? this.profile.bank_branch : '', [Validators.required]],\n\n\n\n      // facebook: [this.profile ? this.profile.profile_facebook : '', [Validators.required]],\n      // twitter: [this.profile ? this.profile.profile_twitter : '', [Validators.required]],\n      // instagram: [this.profile ? this.profile.profile_instagram : '', [Validators.required]],\n    });\n  }\n\n  get f() { return this.profileForm.controls; }\n\n  selectImg(event) {\n    this.profileImage = event.target.files[0];\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.profileForm.invalid) {\n      return;\n    }\n    const controls = this.f;\n    console.log('controls ', controls);\n    const _profile = {\n      profile_id: this.profile.profile_id,\n      profile_first_name: controls.firstName.value,\n      profile_last_name: controls.lastName.value,\n      profile_email: controls.email.value,\n      profile_biz_name : controls.businessName.value,\n      profile_contact: controls.mobile.value,\n      profile_address: controls.address.value,\n      profile_dob: new Date(),\n      profile_location: controls.location.value,\n      profile_summary: controls.summary.value,\n      profile_facebook: \"\",\n      profile_instagram: \"\",\n      profile_twitter: \"\",\n      bank_name : controls.bank_name.value,\n      bank_acc_no : controls.bank_acc_no.value,\n      bank_ifsc_no : controls.bank_ifsc_no.value,\n      bank_branch : controls.bank_branch.value,\n      location_lat : this.Latitude || 0,\n      location_lng : this.Longitude || 0\n    };\nconsole.log(_profile);\n\n    this.profileservice.update(_profile).subscribe(res => {\n      console.log(res);\n      \n      this.router.navigateByUrl('dashboard');\n      // this.notify.showSuccess(\"Logged in successfully\", \"LOGIN\");\n    }, err => {\n      // this.notify.showError(err, \"LOGIN\");\n    });\n  }\n\n  uploadImg() {\n    if (this.profileImage) {\n      this.profileservice.uploadimage(this.profile.profile_id, this.profileImage).subscribe(res => {\n        console.log(res);\n        \n        this.router.navigateByUrl('dashboard');\n        // this.notify.showSuccess(\"Logged in successfully\", \"LOGIN\");\n      }, err => {\n        // this.notify.showError(err, \"LOGIN\");\n      });\n    } else {\n      alert('Select Image');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.submitted = false;\n  }\n\n\n\n\n  markerDragEnd($event: MouseEvent) {\n    this.location_lat = Number($event.coords.lat);\n    this.location_lng = Number($event.coords.lng);\n    this.base_lat = this.location_lat;\n    this.base_lng = this.location_lng;\n    this.Latitude = this.location_lat;\n    this.Longitude = this.location_lng;\n    this.profileservice.location_details(this.location_lat,this.location_lng).subscribe(async data=>{\n      this.address = await data['results'][0]['formatted_address'];  \n    });\n  }\n\n\n      // profile_id: this.profile.profile_id,\n      // profile_first_name: controls.firstName.value,\n      // profile_last_name: controls.lastName.value,\n      // // profile_biz_name: controls.password.value,\n      // // profile_biz_type: controls.password.value,\n      // profile_email: controls.email.value,\n      // profile_contact: controls.mobile.value,\n      // profile_address: controls.address.value,\n      // profile_dob: controls.dob.value,\n      // // profile_gender: controls.password.value,\n      // profile_location: controls.location.value,\n      // profile_summary: controls.summary.value,\n      // profile_facebook: controls.facebook.value,\n      // // profile_youtube: controls.youtube.value,\n      // profile_instagram: controls.instagram.value,\n      // profile_twitter: controls.twitter.value\n\n\n}\n","export default \"<!--<ion-header>\\n  <ion-toolbar>\\n    <ion-title>message</ion-title>\\n  </ion-toolbar>\\n</ion-header>-->\\n\\n\\n<!-- Top Bar Starts -->\\n<div class=\\\"top-bar clearfix\\\">\\n  <div class=\\\"row gutter\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"page-title\\\">\\n        <h3>Message</h3>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n<!-- Top Bar Ends -->\\n<div class=\\\"row gutter \\\">\\n  <div class=\\\"col-md-4 mb-0 col-sm-4 col-xs-12 message_list\\\">\\n    <div class=\\\"task-wrapper mb-0\\\" [style.height.px]=\\\"innerHeight\\\">\\n\\n      <div class=\\\"task-block bug\\\" *ngFor=\\\"let user of users\\\" (click)=\\\"openChat(user)\\\">\\n        <h5 class=\\\"task-id\\\">{{user.profile_first_name}} {{user.profile_last_name}} <i class=\\\"icon-controller-record\\\"></i> </h5>\\n        <div class=\\\"assigned-user\\\">\\n          <img *ngIf=\\\"!user.profile_img\\\" src=\\\"assets/images/thumbs/user12.png\\\" class=\\\"img-fluid\\\" alt=\\\"Admin\\\">\\n          <img *ngIf=\\\"user.profile_img\\\" [src]=\\\"user.profile_img\\\" class=\\\"img-fluid\\\" alt=\\\"Admin\\\">\\n        </div>\\n        <p class=\\\"task-desc\\\">{{user.role_name}}</p>\\n        <ul class=\\\"task-footer\\\">\\n          <li>{{user.last_msg_time | timeAgo}}</li>\\n        </ul>\\n        <span class=\\\"task-type\\\">{{user.role_name}}</span>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-8\\\">\\n\\n    <div class=\\\"d-flex chat_col_2 flex-column\\\" [style.height.px]=\\\"innerHeight\\\">\\n      <div class=\\\"flx_1 pb-2 position-relative\\\">\\n        <div class=\\\"chat_info_load scroll_y\\\" #scrollMe [scrollTop]=\\\"scrollMe.scrollHeight\\\">\\n        <div *ngFor=\\\"let chat of chats\\\">\\n\\n          <div class=\\\"d-flex justify-content-start mb-2\\\" *ngIf=\\\"chat.chat_receiver == senderId\\\">\\n            <div class=\\\"flx_0 chat_txt_w\\\">\\n              <div class=\\\"panel\\\">\\n                <h5 class=\\\"task-name text-red mb-0 pb-0 shadow_none\\\">{{receiver}}</h5>\\n                <p>\\n                  {{chat.chat_content}}\\n                </p>\\n                <div class=\\\"text-right time_chat\\\">\\n                  {{chat.chated_on | date: 'hh:mm a'}}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex justify-content-end mb-2\\\" *ngIf=\\\"chat.chat_sender == senderId\\\">\\n            <div class=\\\"flx_0 chat_txt_w\\\">\\n              <div class=\\\"panel\\\">\\n                <h5 class=\\\"task-name text-green mb-0 pb-0 shadow_none\\\">{{sender}}</h5>\\n                <p>\\n                  {{chat.chat_content}}\\n                </p>\\n                <div class=\\\"text-right time_chat\\\">\\n                  {{chat.chated_on | date: 'hh:mm a'}}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n        <!-- <div class=\\\"d-flex justify-content-end mb-2\\\">\\n\\n          <div class=\\\"flx_0 chat_txt_w\\\">\\n            <div class=\\\"panel\\\">\\n              <h5 class=\\\"task-name text-green mb-0 pb-0 shadow_none\\\">Sample Name - 147</h5>\\n              <p>\\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\\n                Ipsum has been the industry's standard dummy text ever\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex justify-content-start mb-2\\\">\\n          <div class=\\\"flx_0 chat_txt_w\\\">\\n            <div class=\\\"panel\\\">\\n              <h5 class=\\\"task-name text-red mb-0 pb-0 shadow_none\\\">Sample Name - 147</h5>\\n              <p>\\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\\n                Ipsum has been the industry's standard dummy text ever\\n              </p>\\n            </div>\\n          </div>\\n        </div> -->\\n      </div>\\n      <div class=\\\"flx_0\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n          <div class=\\\"flx_1 pr-2\\\">\\n            <textarea style=\\\"height: 70px;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"chatmsg\\\"></textarea>\\n          </div>\\n          <div class=\\\"flx_0\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"send()\\\">Send</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-go-live',\n  templateUrl: './go-live.page.html',\n  styleUrls: ['./go-live.page.scss'],\n})\nexport class GoLivePage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MasterlayoutPage } from '../layout/masterlayout/masterlayout.page';\n\nimport { CommonPage } from './common.component';\nimport { GoLivePage } from './go-live/go-live.page';\nimport { MessagePage } from './message/message.page';\nimport { UserProfileSettingPage } from './user-profile-setting/user-profile-setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CommonPage\n  },\n  {\n    path: '',\n    component: MasterlayoutPage,\n    children: [\n      {\n        path: 'message',\n        component: MessagePage\n      },\n      {\n        path: 'message/:receiver',\n        component: MessagePage\n      },\n      {\n        path: 'go-live',\n        component: GoLivePage\n      },\n      {\n        path: 'user-profile',\n        component: UserProfileSettingPage\n      }\n    ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CommonPageRoutingModule { }\n","export default \".task-wrapper,\\n.over_auto {\\n  overflow-y: auto;\\n  overflow-X: hidden;\\n}\\n\\n.chat_info_load {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  overflow: auto;\\n  top: 0;\\n}\\n\\n.time_chat {\\n  color: rgba(8, 6, 6, 0.5);\\n  font-size: 11px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL21lc3NhZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLGdCQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsY0FBQTtFQUNBLE1BQUE7QUFDSjs7QUFHQTtFQUNJLHlCQUFBO0VBQ0EsZUFBQTtBQUFKIiwiZmlsZSI6Im1lc3NhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2std3JhcHBlcixcbi5vdmVyX2F1dG8ge1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgb3ZlcmZsb3ctWDogaGlkZGVuO1xufVxuXG4uY2hhdF9pbmZvX2xvYWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b20gIDogMDtcbiAgICBsZWZ0ICAgIDogMDtcbiAgICByaWdodCAgIDogMDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICB0b3AgICAgIDogMDtcblxufVxuXG4udGltZV9jaGF0IHtcbiAgICBjb2xvciAgICA6IHJnYmEoOCwgNiwgNiwgMC41KTtcbiAgICBmb250LXNpemU6IDExcHg7XG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXByb2ZpbGUtc2V0dGluZy5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CommonPageRoutingModule } from './common-routing.module';\n\nimport { CommonPage } from './common.component';\nimport { UserProfileSettingPage } from './user-profile-setting/user-profile-setting.page';\nimport { MessagePage } from './message/message.page';\nimport { GoLivePage } from './go-live/go-live.page';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MasterlayoutPage } from '../layout/masterlayout/masterlayout.page';\nimport { MasterheaderPage } from '../layout/masterheader/masterheader.page';\nimport { MasterfooterPage } from '../layout/masterfooter/masterfooter.page';\nimport { MasterasidePage } from '../layout/masteraside/masteraside.page';\nimport {TimeAgoPipe} from 'time-ago-pipe';\n\n\nimport { AgmCoreModule } from '@agm/core';\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\nimport { LoaderComponent } from './loader/loader.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonPageRoutingModule,\n    AgmCoreModule.forRoot({apiKey: 'AIzaSyDap8qav1flUsql0VWUYkjgB0noN0o_U1Y'}),\n    GooglePlaceModule\n  ],\n  declarations: [\n    CommonPage,\n    MasterlayoutPage,\n    MasterheaderPage,\n    MasterfooterPage,\n    MasterasidePage,\n    UserProfileSettingPage,\n    MessagePage,\n    GoLivePage,\n    LoaderComponent,\n    TimeAgoPipe\n  ]\n})\nexport class CommonPageModule {}\n","export default \"<!-- Top Bar Starts -->\\n<div class=\\\"top-bar clearfix\\\">\\n    <div class=\\\"row gutter\\\">\\n        <div class=\\\"col-12\\\">\\n            <div class=\\\"page-title\\\">\\n                <h3>User Profile Setting</h3>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n<!-- Top Bar Ends -->\\n\\n<div class=\\\"announc_form\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">First Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\"\\n                                        placeholder=\\\"First Name\\\" />\\n                                    <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Last Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n                                        placeholder=\\\"Last Name\\\" />\\n                                    <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Business Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"businessName\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.businessName.errors }\\\"\\n                                        placeholder=\\\"Business Name\\\" />\\n                                    <div *ngIf=\\\"submitted && f.businessName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.businessName.errors.required\\\">Business Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Mobile No</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"mobile\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.mobile.errors }\\\"\\n                                        placeholder=\\\"Mobile No\\\" />\\n                                    <div *ngIf=\\\"submitted && f.mobile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.mobile.errors.required\\\">Mobile No is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Email</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" placeholder=\\\"Email\\\" />\\n                                    <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n \\n\\n\\n\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Address</label>\\n                                    <textarea formControlName=\\\"address\\\" style=\\\"height: 100px;\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\"\\n                                        placeholder=\\\"Address\\\"></textarea>\\n                                    <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.address.errors.required\\\">Address is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Location</label>\\n                                    <textarea formControlName=\\\"location\\\" style=\\\"height: 70px;\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.location.errors }\\\"\\n                                        placeholder=\\\"Location\\\"></textarea>\\n                                    <div *ngIf=\\\"submitted && f.location.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.location.errors.required\\\">Location is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">D.O.B</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"dob\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.dob.errors }\\\"\\n                                        placeholder=\\\"Date of birth\\\" />\\n                                    <div *ngIf=\\\"submitted && f.dob.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.dob.errors.required\\\">D.O.B is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Address</label>\\n                                    <!-- <agm-map [latitude]=\\\"base_lat\\\" [longitude]=\\\"base_lng\\\" [zoom]=\\\"zoom\\\" [disableDefaultUI]=\\\"false\\\"\\n                                    [zoomControl]=\\\"false\\\">\\n                                    <agm-marker [latitude]=\\\"location_lat\\\" [longitude]=\\\"location_lng\\\" [markerDraggable]=\\\"true\\\"\\n                                      (dragEnd)=\\\"markerDragEnd($event)\\\">\\n                                      <agm-info-window>\\n                                        <strong>{{ address }}</strong>\\n                                      </agm-info-window>\\n                                    </agm-marker>\\n                                   </agm-map> -->\\n                                   <input formControlName=\\\"address\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\"\\n                                   placeholder=\\\"Address\\\"  style=\\\"width: 100%;\\\" [(ngModel)]=\\\"address\\\" ngx-google-places-autocomplete  #placesRef=\\\"ngx-places\\\"\\n                                   (onAddressChange)=\\\"handleAddressChange($event)\\\" />\\n                                    <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.address.errors.required\\\">Address is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Location</label>\\n                                    <input formControlName=\\\"location\\\"  [disabled]=\\\"false\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.location.errors }\\\"\\n                                        placeholder=\\\"Location\\\">\\n                                    <div *ngIf=\\\"submitted && f.location.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.location.errors.required\\\">Location is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Summary</label>\\n                                    <textarea type=\\\"text\\\" formControlName=\\\"summary\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.summary.errors }\\\"\\n                                        placeholder=\\\"Summary\\\"> </textarea>\\n                                    <div *ngIf=\\\"submitted && f.summary.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.summary.errors.required\\\">Summary is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Bank Name</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_name\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_name.errors }\\\"\\n                                        placeholder=\\\"Bank Name\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_name.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_name.errors.required\\\">Bank Name is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Bank Account No</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_acc_no\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_acc_no.errors }\\\"\\n                                        placeholder=\\\"Bank Account No\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_acc_no.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_acc_no.errors.required\\\">Bank Account No is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">Branch</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_branch\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_branch.errors }\\\"\\n                                        placeholder=\\\"Branch\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_branch.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_branch.errors.required\\\">Bank Branch is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"summary\\\">IFSC</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"bank_ifsc_no\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.bank_ifsc_no.errors }\\\"\\n                                        placeholder=\\\"IFSC\\\">\\n                                    <div *ngIf=\\\"submitted && f.bank_ifsc_no.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.bank_ifsc_no.errors.required\\\">IFSC is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Facebook</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"facebook\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.facebook.errors }\\\"\\n                                        placeholder=\\\"Facebook\\\" />\\n                                    <div *ngIf=\\\"submitted && f.facebook.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.facebook.errors.required\\\">Facebook is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Twitter</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"twitter\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.twitter.errors }\\\"\\n                                        placeholder=\\\"Twitter\\\" />\\n                                    <div *ngIf=\\\"submitted && f.twitter.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.twitter.errors.required\\\">Twitter is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n                <!-- <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Instagram</label>\\n                                    <input type=\\\"text\\\" formControlName=\\\"instagram\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.instagram.errors }\\\"\\n                                        placeholder=\\\"Instagram\\\" />\\n                                    <div *ngIf=\\\"submitted && f.instagram.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.instagram.errors.required\\\">Instagram is required</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n                <div class=\\\"panel mb-3\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"styled-input-wrapper\\\">\\n                            <div class=\\\"input-icon\\\">\\n                                <i class=\\\"icon-file-text2\\\"></i>\\n                            </div>\\n                            <div class=\\\"styled-input\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"userName\\\">Upload Profile Image</label>\\n                                    <input type=\\\"file\\\" class=\\\"form-control\\\" accept=\\\"image/*\\\" (change)=\\\"selectImg($event)\\\"/>\\n                                </div>\\n                                <div class=\\\"flx_0\\\">\\n                                    <button title=\\\"Choose Default Image\\\" class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"uploadImg()\\\"> <i class=\\\"icon-plus d-block\\\"></i> </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"text-center pb-2\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success mr-2\\\">Save</button>\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Clear</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[scroll-to-bottom]'\n})\nexport class ScrollToBottomDirective {\n  constructor(private _el: ElementRef) { }\n\n  // public ngAfterViewInit() {\n  //   const el: HTMLDivElement = this._el.nativeElement;\n  //   // Does not work as scrollHeight === offsetHeight\n  //   el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight);\n  //   // This work but we see scroll moving\n  //   setTimeout(() => el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight));\n  // }\n\n  // public ngOnInit() {\n  //   const el: HTMLDivElement = this._el.nativeElement;\n  //   // Does not work as scrollHeight === offsetHeight\n  //   el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight);\n  //   // This work but we see scroll moving\n  //   setTimeout(() => el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight));\n  // }\n\n  public scrollToBottom() {\n    const el: HTMLDivElement = this._el.nativeElement;\n    el.scrollTop = Math.max(0, el.scrollHeight - el.offsetHeight);\n  }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { io } from 'socket.io-client';\nimport { RemoteConfig } from 'src/app/_core/configs/remote.config';\nimport { ChatService } from 'src/app/_core/services/chat.service';\nimport { ProfileService } from 'src/app/_core/services/profile.service';\nimport { UserService } from 'src/app/_core/services/user.service';\nimport { LocalStorage } from 'src/app/_core/_data/localstorage';\nimport { ScrollToBottomDirective } from './scroll-to-bottom.directive';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n\n  public innerHeight: any;\n  @ViewChild(ScrollToBottomDirective) scroll: ScrollToBottomDirective;\n\n  socket: any;\n  chats = [];\n  senderId: string;\n  receiverId: string;\n  sender: string;\n  receiver: string;\n\n  chatmsg: string;\n  users: any[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private storage: LocalStorage,\n    private uservice: UserService,\n    private service: ChatService,\n    private profileservice: ProfileService\n  ) {\n    this.senderId = this.storage.user.profile_id;\n    this.sender = this.storage.user.user_name;\n\n    // this.socket = io(RemoteConfig.BASE_URL, {\n    //   transports: [\"websocket\"],\n    //   reconnection: true,\n    //   reconnectionDelayMax: 1000,\n    //   autoConnect: true,\n    //   query: {\n    //     chatID: this.senderId\n    //   }\n    // });\n\n    // this.socket.on(\"connect\", () => {\n    //   console.log('Socket id - ', this.socket.id); // x8WIv7-mJelg7on_ALbx\n    // });\n\n    // this.socket.on('error', function () {\n    //   console.log(\"Sorry, there seems to be an issue with the connection!\");\n    // });\n\n    // this.socket.on('connect_error', function (err) {\n    //   console.log(\"connect failed \" + err);\n    // });\n\n    // this.socket.on('connection', function () {\n    //   console.log(\"connected\");\n    // });\n    \n  }\n\n  ngOnInit() {\n    this.innerHeight = window.innerHeight - 150;\n\n    if (this.storage.userRole == 1) {\n      // this.uservice.listMerchants({}).subscribe(res => {\n      //   this.users = res.rows;\n      // })\n\n      this.service.listChaters(this.senderId, {}).subscribe(res => {\n        this.users = res.rows;\n        if (this.users) {\n          this.openChat(this.users[0])\n        }\n      })\n    } else {\n      this.service.listChaters(this.senderId, {}).subscribe(res => {\n        if (res.count > 0) {\n          this.users = res.rows;\n          if (this.users) {\n            this.openChat(this.users[0])\n          }\n        } else {\n          this.uservice.list({}).subscribe(res => {\n            console.log('Users ', res);\n            this.users = res.rows;\n            if (this.users) {\n              this.openChat(this.users[0])\n            }\n          })\n        }\n      })\n    }\n\n    this.route.params.subscribe(params => {\n      console.log('Params ', params.receiver);\n      if (params.receiver) {\n        this.profileservice.profile_view(1).subscribe(res => {\n          this.openChat(res);\n        }, err => {\n          console.log(err);\n        });\n      }\n    });\n\n    // this.socket.on('receive_message', (msg) => {\n    //   console.log('Receive msgs - ', msg);\n    //   this.chats.push(msg);\n    // });\n\n    setInterval(() => {\n      if (this.senderId && this.receiverId) {\n        this.loadChats();\n      }\n    }, 1000);\n  }\n\n  loadChats() {\n    this.service.listContents(this.senderId, this.receiverId).subscribe(res => {\n      this.chats = res.rows;\n      console.log('Chats - ', this.chats);\n    })\n  }\n\n  openChat(_receiver) {\n    this.receiverId = _receiver.profile_id;\n    this.receiver = _receiver.profile_first_name + ' ' + _receiver.profile_last_name;\n    this.loadChats();\n  }\n\n  send_1() {\n    if (this.chatmsg != '') {\n      // Push the message through socket \n      console.log('Socket - ', this.socket);\n\n      this.socket.emit('send_message', {\n        receiverChatID: this.receiverId,\n        senderChatID: this.senderId,\n        content: this.chatmsg\n      });\n    }\n    this.chatmsg = '';\n    // this.receive();\n  }\n\n  send() {\n    if (this.chatmsg != '') {\n      this.service.sendMsg({\n        receiverChatID: this.receiverId,\n        senderChatID: this.senderId,\n        content: this.chatmsg\n      }).subscribe(res => {\n        console.log(res);\n      })\n    }\n    this.chatmsg = '';\n  }\n\n  receive1() {\n    console.log('receive called', this.socket);\n\n    // Socket receiving method \n    this.socket.on('receive_message', (msg) => {\n      console.log('Receive msgs - ', msg);\n\n      var item = {};\n\n      // check the sender id and change the style class\n      // if(saletdMsgArr[0] == this.myUserId){\n      //    item = { \"styleClass\":\"chat-message right\", \"msgStr\":saletdMsgArr[1] };\n      // }\n      // else{\n      //    item= { \"styleClass\":\"chat-message left\", \"msgStr\":saletdMsgArr[1] };\n      // }\n      // push the bind object to array\n      // Final chats array will iterate in the view  \n\n      this.chats.push(item);\n    });\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnby1saXZlLnBhZ2Uuc2NzcyJ9 */\";","export default \"<!--<ion-header>\\n  <ion-toolbar>\\n    <ion-title>go-live</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n\\n  <!-- Top Bar Starts -->\\n  <div class=\\\"top-bar clearfix\\\">\\n      <div class=\\\"row gutter\\\">\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"page-title\\\">\\n                  <h3>Go Live</h3>\\n              </div>\\n          </div>\\n\\n      </div>\\n  </div>\\n  <!-- Top Bar Ends -->\\n\\n  <div class=\\\"d-flex align-items-center justify-content-center flex-row\\\">\\n      <div class=\\\"text-center pr-3 pl-3\\\">\\n          <a href=\\\"#\\\">\\n              <span class=\\\"cart_icon d-inline-flex align-items-center justify-content-center\\\">\\n                  <i class=\\\"icon-shopping-cart\\\"></i>\\n              </span>\\n              <h5>Go Live</h5>\\n          </a>\\n      </div>\\n\\n  </div>\\n\\n  <div class=\\\"pt-2\\\">\\n      <div class=\\\"panel\\\">\\n          <div class=\\\"panel-body\\\">\\n              <div class=\\\"form-group\\\">\\n                  <textarea style=\\\"height: 200px;\\\" class=\\\"form-control\\\"></textarea>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"checkbox\\\"> Agree Terms &amp; Conditions\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Proceed Live</button>\\n              </div>\\n          </div>\\n      </div>\\n\\n  </div>\\n\\n  <div class=\\\"pt-5\\\">\\n      <div class=\\\"panel panel-red\\\">\\n          <div class=\\\"panel-heading mb-0 pb-0\\\">\\n              <h3 class=\\\"text-left text-blue\\\">History</h3>\\n          </div>\\n          <div class=\\\"panel-body pb-0 table-responsive product_table td_center\\\">\\n              <div class=\\\"pb-2\\\">\\n                  <div class=\\\"styled-input-wrapper\\\">\\n                      <div class=\\\"input-icon\\\">\\n                          <i class=\\\"icon-trash-stroke text-red\\\"></i>\\n                      </div>\\n                      <div class=\\\"styled-input\\\">\\n                          <div class=\\\"history_live\\\">\\n                              <img src=\\\"../../../assets/images/timeline.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n\\n\\n\\n          </div>\\n      </div>\\n  </div>\";"],"sourceRoot":"webpack:///"}